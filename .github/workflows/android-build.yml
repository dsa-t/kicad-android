name: Android build
run-name: Android build
on: [push]

env:
  QT_VERSION: "6.6.2"

jobs:
  build-android:
    runs-on: ubuntu-22.04
    steps:
      - run: df -h /

      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          # this might remove tools that are actually needed,
          # if set to "true" but frees about 6 GB
          tool-cache: false
          
          # all of these default to true, but feel free to set to
          # "false" if necessary for your workflow
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          docker-images: true
          swap-storage: true

      - run: sudo mkdir -m 777 /usr/local/lib/android
      
      - run: df -h /
          
      # Install Meson
      - name: Install meson
        run: sudo pip3 install --upgrade meson

      # Install apt packages
      - name: Install apt packages
        run: sudo apt-get install -y ninja-build protobuf-compiler

      # Install Java
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      # Android environment
      - name: Setup Android environment
        uses: android-actions/setup-android@v3
        with:
          log-accepted-android-sdk-licenses: false

      - name: Install Android SDK / NDK / tools
        run: |
             sdkmanager "platforms;android-34"
             sdkmanager "ndk;25.2.9519653"
             sdkmanager "build-tools;34.0.0"

      # Install Qt (desktop & Android)
      - name: Install Qt (desktop)
        uses: jurplel/install-qt-action@v4
        with:
          version: ${{env.QT_VERSION}}
          setup-python: false

      - name: Install Qt (Android x86_64)
        uses: jurplel/install-qt-action@v4
        with:
          version: ${{env.QT_VERSION}}
          host: 'linux'
          target: 'android'
          arch: 'android_x86_64'
          setup-python: false

      - name: Install Qt (Android armv8)
        uses: jurplel/install-qt-action@v4
        with:
          version: ${{env.QT_VERSION}}
          host: 'linux'
          target: 'android'
          arch: 'android_arm64_v8a'
          setup-python: false
      
      # Setup env
      - name: Setup env
        run: |
             echo "QT_HOST_PATH=/home/runner/work/${{ github.event.repository.name }}/Qt/${{env.QT_VERSION}}/gcc_64" >> $GITHUB_ENV
             echo "QT_TARGET_BASE=/home/runner/work/${{ github.event.repository.name }}/Qt/${{env.QT_VERSION}}" >> $GITHUB_ENV
             echo "ANDROID_NDK_ROOT=$ANDROID_SDK_ROOT/ndk/25.2.9519653" >> $GITHUB_ENV

      - uses: jaywcjlove/github-action-folder-tree@main
        with:
          path: ~
          depth: 3

      - uses: jaywcjlove/github-action-folder-tree@main
        with:
          path: /usr/local/lib/android/sdk
          depth: 3

      - uses: jaywcjlove/github-action-folder-tree@main
        with:
          path: /usr/local/lib/android/sdk/ndk/25.2.9519653
          depth: 3

      # Checkout repository (and submodules)
      - name: Checkout repository (and submodules)
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Fetch tarballs
        run: |
          mkdir -p OCCT && curl -L -o - 'https://github.com/Open-Cascade-SAS/OCCT/archive/refs/tags/V7_8_1.tar.gz' | tar -xz --strip-components=1 -C OCCT
          mkdir -p libgit2 && curl -L -o - 'https://codeload.github.com/libgit2/libgit2/tar.gz/refs/tags/v1.8.0' | tar -xz --strip-components=1 -C libgit2
          mkdir -p ngspice && curl -L -o - 'https://altushost-swe.dl.sourceforge.net/project/ngspice/ng-spice-rework/42/ngspice-42.tar.gz' | tar -xz --strip-components=1 -C ngspice
          mkdir -p cairo && curl -L -o - 'https://gitlab.freedesktop.org/cairo/cairo/-/archive/02754405330989198548d1945b3c55566ba0c6b7/cairo-02754405330989198548d1945b3c55566ba0c6b7.tar.gz' | tar -xz --strip-components=1 -C cairo
          mkdir -p unixODBC && curl -L -o - 'ftp://ftp.unixodbc.org/pub/unixODBC/unixODBC-2.3.12.tar.gz' | tar -xz --strip-components=1 -C unixODBC
          mkdir -p zstd && curl -L -o - 'https://github.com/facebook/zstd/releases/download/v1.5.6/zstd-1.5.6.tar.gz' | tar -xz --strip-components=1 -C zstd
          mkdir -p protobuf && curl -L -o - 'https://github.com/protocolbuffers/protobuf/archive/refs/tags/v3.12.4.tar.gz' | tar -xz --strip-components=1 -C protobuf
          mkdir -p python && curl -L -o - 'https://www.python.org/ftp/python/3.13.0/Python-3.13.0rc1.tgz' | tar -xz --strip-components=1 -C python
          mkdir -p openssl && curl -L -o - 'https://github.com/openssl/openssl/releases/download/openssl-3.3.1/openssl-3.3.1.tar.gz' | tar -xz --strip-components=1 -C openssl
          mkdir -p icu && curl -L -o - 'https://github.com/unicode-org/icu/releases/download/release-73-2/icu4c-73_2-src.tgz' | tar -xz --strip-components=1 -C icu
          mkdir -p pcre2 && curl -L -o - 'https://github.com/PCRE2Project/pcre2/releases/download/pcre2-10.44/pcre2-10.44.tar.gz' | tar -xz --strip-components=1 -C pcre2
          mkdir -p boost && curl -L -o - 'https://github.com/boostorg/boost/releases/download/boost-1.85.0/boost-1.85.0-cmake.tar.gz' | tar -xz --strip-components=1 -C boost


      - name: Apply patches
        run: |
            cp _glu_meson.build glu/meson.build
            cp _glu_meson_options.txt glu/meson_options.txt
            cp _ngspice_configure.ac ngspice/configure.ac
            cp _icu_mh-linux icu/source/config/mh-linux

      - run: df -h /

      - name: Build Application
        run: ./all.sh

      - run: df -h /
        if: success() || failure()

      - name: Upload App arm64-v8a
        uses: actions/upload-artifact@v4
        with:
          name: kicad_arm64-v8a
          path: kicadapp/app_arm64-v8a/build/outputs/apk/*/*.apk

      - name: Upload App x86_64
        uses: actions/upload-artifact@v4
        with:
          name: kicad_x86_64
          path: kicadapp/app_x86_64/build/outputs/apk/*/*.apk
